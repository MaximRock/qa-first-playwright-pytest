[project]
name = "qa-first-playwright-pytest"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "allpairspy>=2.5.1",
    "playwright>=1.54.0",
    "pytest-playwright>=0.7.0",
    "python-dotenv>=1.1.1",
]

[tool.pytest.ini_options]
addopts = "--color=yes"
log_cli = true
markers = [
    "positive: marks tests as positive (deselect with '-m \"not positive\"')",
    "negative: marks tests as negative (deselect with '-m \"not negative\"')",
    "smoke: short smoke tests, marks tests as smoke (deselect with '-m \"not smoke\"')",
    "TC_001: Link test to test case ID",
    "TC_002: Link test to test case ID",
    "TC_003: Link test to test case ID",
    "TC_004: Link test to test case ID",
    "TC_005: Link test to test case ID",
    "TC_006: Link test to test case ID",
    "TC_007: Link test to test case ID",
    "TC_008: Link test to test case ID",
    "TC_009: Link test to test case ID",
    "serial",
]
env = [
    "SLOW_MO=500",
    "BROWSER=firefox",
    "HEADLESS=false",
    "ENV=shot"
]

[tool.ruff]
exclude = [
    ".git",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "venv",
]

line-length = 88
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
preview = true
select = [
    "UP",   # pyupgrade
    "I",    # isort
    "E",    # flake8-errors
    "W",    # flake8-warnings
    "F",    # flake8-pyflakes
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "S",    # flake8-bandit
    "BLE",  # flake8-blind-except
    "T20",  # flake8-print
    "T10",  # flake8-debugger
    "PT",   # flake8-pytest-style
    "RUF",  # Ruff
    "DTZ",  # flake8-datetimez
    "ERA",  # eradicate
    "FURB", # refurb
]
ignore = [
     "C408",  # Ненужный вызов dict, list и т.д.
    "RUF001", # Игнорирование похожих символов с разными ASCII
    "RUF002", # Игнорирование похожих символов с разными ASCII
    "RUF003", # Игнорирование похожих символов с разными ASCII
    "S110",  # try-except-pass
]
fixable = [
    "I",
]

[tool.ruff.format]
quote-style = "double" 
indent-style = "space"

